- Classes => blueprint defines data (but not values), and behavior.
          => instanced to create objects.
- Objects => state (data) and behavior (methods).
          => identity.

- Reference representation:
  - Primitive values are stored directly in the variable.
  - Objects are stored in memory, and the variable stores a reference to that memory location.
  e.g.:
  {
  int x = 10; // x stores the value 10 directly
  Counter c1 = new Counter(); // c1 stores a reference to the Counter object in memory
  }

  - When you assign an object reference to another variable, you are not creating a new object, but rather creating a new reference to the same object.
  e.g.:
  {
  Counter c2 = c1; // c2 now refers to the same Counter object as c1
  }

  see: Counter.java, Main.java

- Common methods:
    - All classes inherit from the Object class, which provides a set of common methods that can be used on any object.
    - toString(): returns a string representation of the object.
    - equals(Object obj): compares the object to another object for equality.
    - hashCode(): returns an integer hash code for the object.

  e.g.: without implementing the toString() method:
    System.out.println(c1); // prints "Counter@1b6d3586"
        with toString() method:
    System.out.println(c1); // prints "Counter: count=0"